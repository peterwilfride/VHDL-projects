// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/10/2019 13:10:42"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module timer_teste (
	load,
	enable,
	clk,
	clr,
	M,
	Q,
	Z);
input 	load;
input 	enable;
input 	clk;
input 	clr;
input 	[3:0] M;
output 	Q;
output 	[3:0] Z;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \enable~combout ;
wire \t2|s[0]~0_combout ;
wire \clr~combout ;
wire \load~combout ;
wire \t4|Equal0~0_wirecell_combout ;
wire \t4|a2|s[0]~0_combout ;
wire \t4|a4|s[0]~_wirecell_combout ;
wire \t4|a2|s[0]~4_combout ;
wire \t1|gen:1:uut|s~0_combout ;
wire \t4|a2|s[1]~1_combout ;
wire \t4|a5|gen:1:uut|s~0_combout ;
wire \t1|gen:2:uut|s~0_combout ;
wire \t4|a2|s[2]~2_combout ;
wire \t4|a5|gen:2:uut|s~0_combout ;
wire \t1|gen:3:uut|s~0_combout ;
wire \orToReg~combout ;
wire \t4|a2|s[3]~3_combout ;
wire \t4|a5|gen:3:uut|s~0_combout ;
wire \t4|Equal0~0_combout ;
wire [3:0] \t4|a2|s ;
wire [3:0] \t4|a4|s ;
wire [3:0] \t2|s ;
wire [3:0] \M~combout ;


cycloneii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\clk~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .input_async_reset = "none";
defparam \clk~I .input_power_up = "low";
defparam \clk~I .input_register_mode = "none";
defparam \clk~I .input_sync_reset = "none";
defparam \clk~I .oe_async_reset = "none";
defparam \clk~I .oe_power_up = "low";
defparam \clk~I .oe_register_mode = "none";
defparam \clk~I .oe_sync_reset = "none";
defparam \clk~I .operation_mode = "input";
defparam \clk~I .output_async_reset = "none";
defparam \clk~I .output_power_up = "low";
defparam \clk~I .output_register_mode = "none";
defparam \clk~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \enable~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\enable~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(enable));
// synopsys translate_off
defparam \enable~I .input_async_reset = "none";
defparam \enable~I .input_power_up = "low";
defparam \enable~I .input_register_mode = "none";
defparam \enable~I .input_sync_reset = "none";
defparam \enable~I .oe_async_reset = "none";
defparam \enable~I .oe_power_up = "low";
defparam \enable~I .oe_register_mode = "none";
defparam \enable~I .oe_sync_reset = "none";
defparam \enable~I .operation_mode = "input";
defparam \enable~I .output_async_reset = "none";
defparam \enable~I .output_power_up = "low";
defparam \enable~I .output_register_mode = "none";
defparam \enable~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \t2|s[0]~0 (
// Equation(s):
// \t2|s[0]~0_combout  = !\M~combout [0]

	.dataa(\M~combout [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\t2|s[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \t2|s[0]~0 .lut_mask = 16'h5555;
defparam \t2|s[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \clr~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\clr~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(clr));
// synopsys translate_off
defparam \clr~I .input_async_reset = "none";
defparam \clr~I .input_power_up = "low";
defparam \clr~I .input_register_mode = "none";
defparam \clr~I .input_sync_reset = "none";
defparam \clr~I .oe_async_reset = "none";
defparam \clr~I .oe_power_up = "low";
defparam \clr~I .oe_register_mode = "none";
defparam \clr~I .oe_sync_reset = "none";
defparam \clr~I .operation_mode = "input";
defparam \clr~I .output_async_reset = "none";
defparam \clr~I .output_power_up = "low";
defparam \clr~I .output_register_mode = "none";
defparam \clr~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \load~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\load~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(load));
// synopsys translate_off
defparam \load~I .input_async_reset = "none";
defparam \load~I .input_power_up = "low";
defparam \load~I .input_register_mode = "none";
defparam \load~I .input_sync_reset = "none";
defparam \load~I .oe_async_reset = "none";
defparam \load~I .oe_power_up = "low";
defparam \load~I .oe_register_mode = "none";
defparam \load~I .oe_sync_reset = "none";
defparam \load~I .operation_mode = "input";
defparam \load~I .output_async_reset = "none";
defparam \load~I .output_power_up = "low";
defparam \load~I .output_register_mode = "none";
defparam \load~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \t2|s[0] (
	.clk(\clk~combout ),
	.datain(\t2|s[0]~0_combout ),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\load~combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t2|s [0]));

cycloneii_lcell_comb \t4|Equal0~0_wirecell (
// Equation(s):
// \t4|Equal0~0_wirecell_combout  = !\t4|Equal0~0_combout 

	.dataa(\t4|Equal0~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\t4|Equal0~0_wirecell_combout ),
	.cout());
// synopsys translate_off
defparam \t4|Equal0~0_wirecell .lut_mask = 16'h5555;
defparam \t4|Equal0~0_wirecell .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \t4|a2|s[0]~0 (
// Equation(s):
// \t4|a2|s[0]~0_combout  = (\t4|Equal0~0_wirecell_combout  & (((\t2|s [0])))) # (!\t4|Equal0~0_wirecell_combout  & ((\load~combout  & ((\t2|s [0]))) # (!\load~combout  & (\t4|a2|s [0]))))

	.dataa(\t4|a2|s [0]),
	.datab(\t2|s [0]),
	.datac(\t4|Equal0~0_wirecell_combout ),
	.datad(\load~combout ),
	.cin(gnd),
	.combout(\t4|a2|s[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a2|s[0]~0 .lut_mask = 16'hCCCA;
defparam \t4|a2|s[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \t4|a4|s[0]~_wirecell (
// Equation(s):
// \t4|a4|s[0]~_wirecell_combout  = !\t4|a4|s [0]

	.dataa(\t4|a4|s [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\t4|a4|s[0]~_wirecell_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a4|s[0]~_wirecell .lut_mask = 16'h5555;
defparam \t4|a4|s[0]~_wirecell .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \t4|a2|s[0]~4 (
// Equation(s):
// \t4|a2|s[0]~4_combout  = (\enable~combout  & (\t4|Equal0~0_combout  & !\load~combout ))

	.dataa(\enable~combout ),
	.datab(vcc),
	.datac(\t4|Equal0~0_combout ),
	.datad(\load~combout ),
	.cin(gnd),
	.combout(\t4|a2|s[0]~4_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a2|s[0]~4 .lut_mask = 16'h00A0;
defparam \t4|a2|s[0]~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a2|s[0] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s[0]~0_combout ),
	.sdata(\t4|a4|s[0]~_wirecell_combout ),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(\t4|a2|s[0]~4_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a2|s [0]));

cycloneii_io \M[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\M~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(M[0]));
// synopsys translate_off
defparam \M[0]~I .input_async_reset = "none";
defparam \M[0]~I .input_power_up = "low";
defparam \M[0]~I .input_register_mode = "none";
defparam \M[0]~I .input_sync_reset = "none";
defparam \M[0]~I .oe_async_reset = "none";
defparam \M[0]~I .oe_power_up = "low";
defparam \M[0]~I .oe_register_mode = "none";
defparam \M[0]~I .oe_sync_reset = "none";
defparam \M[0]~I .operation_mode = "input";
defparam \M[0]~I .output_async_reset = "none";
defparam \M[0]~I .output_power_up = "low";
defparam \M[0]~I .output_register_mode = "none";
defparam \M[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \M[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\M~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(M[1]));
// synopsys translate_off
defparam \M[1]~I .input_async_reset = "none";
defparam \M[1]~I .input_power_up = "low";
defparam \M[1]~I .input_register_mode = "none";
defparam \M[1]~I .input_sync_reset = "none";
defparam \M[1]~I .oe_async_reset = "none";
defparam \M[1]~I .oe_power_up = "low";
defparam \M[1]~I .oe_register_mode = "none";
defparam \M[1]~I .oe_sync_reset = "none";
defparam \M[1]~I .operation_mode = "input";
defparam \M[1]~I .output_async_reset = "none";
defparam \M[1]~I .output_power_up = "low";
defparam \M[1]~I .output_register_mode = "none";
defparam \M[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \t1|gen:1:uut|s~0 (
// Equation(s):
// \t1|gen:1:uut|s~0_combout  = \M~combout [0] $ (!\M~combout [1])

	.dataa(vcc),
	.datab(vcc),
	.datac(\M~combout [0]),
	.datad(\M~combout [1]),
	.cin(gnd),
	.combout(\t1|gen:1:uut|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \t1|gen:1:uut|s~0 .lut_mask = 16'hF00F;
defparam \t1|gen:1:uut|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t2|s[1] (
	.clk(\clk~combout ),
	.datain(\t1|gen:1:uut|s~0_combout ),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\load~combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t2|s [1]));

cycloneii_lcell_comb \t4|a2|s[1]~1 (
// Equation(s):
// \t4|a2|s[1]~1_combout  = (\t4|Equal0~0_wirecell_combout  & (((\t2|s [1])))) # (!\t4|Equal0~0_wirecell_combout  & ((\load~combout  & ((\t2|s [1]))) # (!\load~combout  & (\t4|a2|s [1]))))

	.dataa(\t4|a2|s [1]),
	.datab(\t2|s [1]),
	.datac(\t4|Equal0~0_wirecell_combout ),
	.datad(\load~combout ),
	.cin(gnd),
	.combout(\t4|a2|s[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a2|s[1]~1 .lut_mask = 16'hCCCA;
defparam \t4|a2|s[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a4|s[0] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s [0]),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\t4|Equal0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a4|s [0]));

cycloneii_lcell_ff \t4|a4|s[1] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s [1]),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\t4|Equal0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a4|s [1]));

cycloneii_lcell_comb \t4|a5|gen:1:uut|s~0 (
// Equation(s):
// \t4|a5|gen:1:uut|s~0_combout  = \t4|a4|s [0] $ (!\t4|a4|s [1])

	.dataa(vcc),
	.datab(vcc),
	.datac(\t4|a4|s [0]),
	.datad(\t4|a4|s [1]),
	.cin(gnd),
	.combout(\t4|a5|gen:1:uut|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a5|gen:1:uut|s~0 .lut_mask = 16'hF00F;
defparam \t4|a5|gen:1:uut|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a2|s[1] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s[1]~1_combout ),
	.sdata(\t4|a5|gen:1:uut|s~0_combout ),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(\t4|a2|s[0]~4_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a2|s [1]));

cycloneii_io \M[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\M~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(M[2]));
// synopsys translate_off
defparam \M[2]~I .input_async_reset = "none";
defparam \M[2]~I .input_power_up = "low";
defparam \M[2]~I .input_register_mode = "none";
defparam \M[2]~I .input_sync_reset = "none";
defparam \M[2]~I .oe_async_reset = "none";
defparam \M[2]~I .oe_power_up = "low";
defparam \M[2]~I .oe_register_mode = "none";
defparam \M[2]~I .oe_sync_reset = "none";
defparam \M[2]~I .operation_mode = "input";
defparam \M[2]~I .output_async_reset = "none";
defparam \M[2]~I .output_power_up = "low";
defparam \M[2]~I .output_register_mode = "none";
defparam \M[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \t1|gen:2:uut|s~0 (
// Equation(s):
// \t1|gen:2:uut|s~0_combout  = \M~combout [2] $ (((!\M~combout [0] & !\M~combout [1])))

	.dataa(vcc),
	.datab(\M~combout [0]),
	.datac(\M~combout [1]),
	.datad(\M~combout [2]),
	.cin(gnd),
	.combout(\t1|gen:2:uut|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \t1|gen:2:uut|s~0 .lut_mask = 16'hFC03;
defparam \t1|gen:2:uut|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t2|s[2] (
	.clk(\clk~combout ),
	.datain(\t1|gen:2:uut|s~0_combout ),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\load~combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t2|s [2]));

cycloneii_lcell_comb \t4|a2|s[2]~2 (
// Equation(s):
// \t4|a2|s[2]~2_combout  = (\t4|Equal0~0_wirecell_combout  & (((\t2|s [2])))) # (!\t4|Equal0~0_wirecell_combout  & ((\load~combout  & ((\t2|s [2]))) # (!\load~combout  & (\t4|a2|s [2]))))

	.dataa(\t4|a2|s [2]),
	.datab(\t2|s [2]),
	.datac(\t4|Equal0~0_wirecell_combout ),
	.datad(\load~combout ),
	.cin(gnd),
	.combout(\t4|a2|s[2]~2_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a2|s[2]~2 .lut_mask = 16'hCCCA;
defparam \t4|a2|s[2]~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a4|s[2] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s [2]),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\t4|Equal0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a4|s [2]));

cycloneii_lcell_comb \t4|a5|gen:2:uut|s~0 (
// Equation(s):
// \t4|a5|gen:2:uut|s~0_combout  = \t4|a4|s [2] $ (((!\t4|a4|s [0] & !\t4|a4|s [1])))

	.dataa(vcc),
	.datab(\t4|a4|s [0]),
	.datac(\t4|a4|s [1]),
	.datad(\t4|a4|s [2]),
	.cin(gnd),
	.combout(\t4|a5|gen:2:uut|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a5|gen:2:uut|s~0 .lut_mask = 16'hFC03;
defparam \t4|a5|gen:2:uut|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a2|s[2] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s[2]~2_combout ),
	.sdata(\t4|a5|gen:2:uut|s~0_combout ),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(\t4|a2|s[0]~4_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a2|s [2]));

cycloneii_io \M[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\M~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(M[3]));
// synopsys translate_off
defparam \M[3]~I .input_async_reset = "none";
defparam \M[3]~I .input_power_up = "low";
defparam \M[3]~I .input_register_mode = "none";
defparam \M[3]~I .input_sync_reset = "none";
defparam \M[3]~I .oe_async_reset = "none";
defparam \M[3]~I .oe_power_up = "low";
defparam \M[3]~I .oe_register_mode = "none";
defparam \M[3]~I .oe_sync_reset = "none";
defparam \M[3]~I .operation_mode = "input";
defparam \M[3]~I .output_async_reset = "none";
defparam \M[3]~I .output_power_up = "low";
defparam \M[3]~I .output_register_mode = "none";
defparam \M[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \t1|gen:3:uut|s~0 (
// Equation(s):
// \t1|gen:3:uut|s~0_combout  = \M~combout [3] $ (((!\M~combout [0] & (!\M~combout [1] & !\M~combout [2]))))

	.dataa(\M~combout [0]),
	.datab(\M~combout [1]),
	.datac(\M~combout [2]),
	.datad(\M~combout [3]),
	.cin(gnd),
	.combout(\t1|gen:3:uut|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \t1|gen:3:uut|s~0 .lut_mask = 16'hFE01;
defparam \t1|gen:3:uut|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t2|s[3] (
	.clk(\clk~combout ),
	.datain(\t1|gen:3:uut|s~0_combout ),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\load~combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t2|s [3]));

cycloneii_lcell_comb orToReg(
// Equation(s):
// \orToReg~combout  = (\load~combout ) # (!\t4|Equal0~0_combout )

	.dataa(\t4|Equal0~0_combout ),
	.datab(\load~combout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\orToReg~combout ),
	.cout());
// synopsys translate_off
defparam orToReg.lut_mask = 16'hDDDD;
defparam orToReg.sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \t4|a2|s[3]~3 (
// Equation(s):
// \t4|a2|s[3]~3_combout  = (\orToReg~combout  & ((\t2|s [3]))) # (!\orToReg~combout  & (\t4|a2|s [3]))

	.dataa(\t4|a2|s [3]),
	.datab(\t2|s [3]),
	.datac(vcc),
	.datad(\orToReg~combout ),
	.cin(gnd),
	.combout(\t4|a2|s[3]~3_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a2|s[3]~3 .lut_mask = 16'hCCAA;
defparam \t4|a2|s[3]~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a4|s[3] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s [3]),
	.sdata(gnd),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\t4|Equal0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a4|s [3]));

cycloneii_lcell_comb \t4|a5|gen:3:uut|s~0 (
// Equation(s):
// \t4|a5|gen:3:uut|s~0_combout  = \t4|a4|s [3] $ (((!\t4|a4|s [0] & (!\t4|a4|s [1] & !\t4|a4|s [2]))))

	.dataa(\t4|a4|s [0]),
	.datab(\t4|a4|s [1]),
	.datac(\t4|a4|s [2]),
	.datad(\t4|a4|s [3]),
	.cin(gnd),
	.combout(\t4|a5|gen:3:uut|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \t4|a5|gen:3:uut|s~0 .lut_mask = 16'hFE01;
defparam \t4|a5|gen:3:uut|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \t4|a2|s[3] (
	.clk(\clk~combout ),
	.datain(\t4|a2|s[3]~3_combout ),
	.sdata(\t4|a5|gen:3:uut|s~0_combout ),
	.aclr(\clr~combout ),
	.sclr(gnd),
	.sload(\t4|a2|s[0]~4_combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\t4|a2|s [3]));

cycloneii_lcell_comb \t4|Equal0~0 (
// Equation(s):
// \t4|Equal0~0_combout  = (\t4|a2|s [0]) # ((\t4|a2|s [1]) # ((\t4|a2|s [2]) # (\t4|a2|s [3])))

	.dataa(\t4|a2|s [0]),
	.datab(\t4|a2|s [1]),
	.datac(\t4|a2|s [2]),
	.datad(\t4|a2|s [3]),
	.cin(gnd),
	.combout(\t4|Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \t4|Equal0~0 .lut_mask = 16'hFFFE;
defparam \t4|Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Q~I (
	.datain(!\t4|Equal0~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Q));
// synopsys translate_off
defparam \Q~I .input_async_reset = "none";
defparam \Q~I .input_power_up = "low";
defparam \Q~I .input_register_mode = "none";
defparam \Q~I .input_sync_reset = "none";
defparam \Q~I .oe_async_reset = "none";
defparam \Q~I .oe_power_up = "low";
defparam \Q~I .oe_register_mode = "none";
defparam \Q~I .oe_sync_reset = "none";
defparam \Q~I .operation_mode = "output";
defparam \Q~I .output_async_reset = "none";
defparam \Q~I .output_power_up = "low";
defparam \Q~I .output_register_mode = "none";
defparam \Q~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Z[0]~I (
	.datain(\t4|a2|s [0]),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Z[0]));
// synopsys translate_off
defparam \Z[0]~I .input_async_reset = "none";
defparam \Z[0]~I .input_power_up = "low";
defparam \Z[0]~I .input_register_mode = "none";
defparam \Z[0]~I .input_sync_reset = "none";
defparam \Z[0]~I .oe_async_reset = "none";
defparam \Z[0]~I .oe_power_up = "low";
defparam \Z[0]~I .oe_register_mode = "none";
defparam \Z[0]~I .oe_sync_reset = "none";
defparam \Z[0]~I .operation_mode = "output";
defparam \Z[0]~I .output_async_reset = "none";
defparam \Z[0]~I .output_power_up = "low";
defparam \Z[0]~I .output_register_mode = "none";
defparam \Z[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Z[1]~I (
	.datain(\t4|a2|s [1]),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Z[1]));
// synopsys translate_off
defparam \Z[1]~I .input_async_reset = "none";
defparam \Z[1]~I .input_power_up = "low";
defparam \Z[1]~I .input_register_mode = "none";
defparam \Z[1]~I .input_sync_reset = "none";
defparam \Z[1]~I .oe_async_reset = "none";
defparam \Z[1]~I .oe_power_up = "low";
defparam \Z[1]~I .oe_register_mode = "none";
defparam \Z[1]~I .oe_sync_reset = "none";
defparam \Z[1]~I .operation_mode = "output";
defparam \Z[1]~I .output_async_reset = "none";
defparam \Z[1]~I .output_power_up = "low";
defparam \Z[1]~I .output_register_mode = "none";
defparam \Z[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Z[2]~I (
	.datain(\t4|a2|s [2]),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Z[2]));
// synopsys translate_off
defparam \Z[2]~I .input_async_reset = "none";
defparam \Z[2]~I .input_power_up = "low";
defparam \Z[2]~I .input_register_mode = "none";
defparam \Z[2]~I .input_sync_reset = "none";
defparam \Z[2]~I .oe_async_reset = "none";
defparam \Z[2]~I .oe_power_up = "low";
defparam \Z[2]~I .oe_register_mode = "none";
defparam \Z[2]~I .oe_sync_reset = "none";
defparam \Z[2]~I .operation_mode = "output";
defparam \Z[2]~I .output_async_reset = "none";
defparam \Z[2]~I .output_power_up = "low";
defparam \Z[2]~I .output_register_mode = "none";
defparam \Z[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Z[3]~I (
	.datain(\t4|a2|s [3]),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Z[3]));
// synopsys translate_off
defparam \Z[3]~I .input_async_reset = "none";
defparam \Z[3]~I .input_power_up = "low";
defparam \Z[3]~I .input_register_mode = "none";
defparam \Z[3]~I .input_sync_reset = "none";
defparam \Z[3]~I .oe_async_reset = "none";
defparam \Z[3]~I .oe_power_up = "low";
defparam \Z[3]~I .oe_register_mode = "none";
defparam \Z[3]~I .oe_sync_reset = "none";
defparam \Z[3]~I .operation_mode = "output";
defparam \Z[3]~I .output_async_reset = "none";
defparam \Z[3]~I .output_power_up = "low";
defparam \Z[3]~I .output_register_mode = "none";
defparam \Z[3]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
